/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/research/v1": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * List research requests
     * @description Get a paginated list of research requests
     */
    get: operations["ResearchController_listResearch"];
    put?: never;
    /** Create a new research request */
    post: operations["ResearchController_createResearch"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/research/v1/{researchId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get a research request by id
     * @description Retrieve research by ID. Add ?stream=true for real-time SSE updates.
     */
    get: operations["ResearchController_getResearch"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    ListResearchResponseDto: {
      /** @description The list of research requests */
      data: (
        | {
            /** @description Milliseconds since epoch time */
            createdAt: number;
            /** @description The instructions given to this research request */
            instructions: string;
            /**
             * @description The model used for the research request
             * @default exa-research
             * @enum {string}
             */
            model: "exa-research" | "exa-research-pro";
            /** @description The unique identifier for the research request */
            researchId: string;
            /** @enum {string} */
            status: "pending";
          }
        | {
            /** @description Milliseconds since epoch time */
            createdAt: number;
            events?: (
              | (
                  | {
                      /** @description Milliseconds since epoch time */
                      createdAt: number;
                      /** @enum {string} */
                      eventType: "research-definition";
                      instructions: string;
                      outputSchema?: {
                        [key: string]: unknown;
                      };
                      researchId: string;
                    }
                  | {
                      /** @description Milliseconds since epoch time */
                      createdAt: number;
                      /** @enum {string} */
                      eventType: "research-output";
                      output:
                        | {
                            content: string;
                            costDollars: {
                              numPages: number;
                              numSearches: number;
                              reasoningTokens: number;
                              total: number;
                            };
                            /** @enum {string} */
                            outputType: "completed";
                            parsed?: {
                              [key: string]: unknown;
                            };
                          }
                        | {
                            error: string;
                            /** @enum {string} */
                            outputType: "failed";
                          };
                      researchId: string;
                    }
                )
              | (
                  | {
                      /** @description Milliseconds since epoch time */
                      createdAt: number;
                      /** @enum {string} */
                      eventType: "plan-definition";
                      planId: string;
                      researchId: string;
                    }
                  | {
                      /** @description Milliseconds since epoch time */
                      createdAt: number;
                      data:
                        | {
                            content: string;
                            /** @enum {string} */
                            type: "think";
                          }
                        | {
                            goal?: string;
                            pageTokens: number;
                            query: string;
                            results: {
                              url: string;
                            }[];
                            /** @enum {string} */
                            searchType: "neural" | "keyword" | "auto" | "fast";
                            /** @enum {string} */
                            type: "search";
                          }
                        | {
                            goal?: string;
                            pageTokens: number;
                            result: {
                              url: string;
                            };
                            /** @enum {string} */
                            type: "crawl";
                          };
                      /** @enum {string} */
                      eventType: "plan-operation";
                      operationId: string;
                      planId: string;
                      researchId: string;
                    }
                  | {
                      /** @description Milliseconds since epoch time */
                      createdAt: number;
                      /** @enum {string} */
                      eventType: "plan-output";
                      output:
                        | {
                            /** @enum {string} */
                            outputType: "tasks";
                            reasoning: string;
                            tasksInstructions: string[];
                          }
                        | {
                            /** @enum {string} */
                            outputType: "stop";
                            reasoning: string;
                          };
                      planId: string;
                      researchId: string;
                    }
                )
              | (
                  | {
                      /** @description Milliseconds since epoch time */
                      createdAt: number;
                      /** @enum {string} */
                      eventType: "task-definition";
                      instructions: string;
                      planId: string;
                      researchId: string;
                      taskId: string;
                    }
                  | {
                      /** @description Milliseconds since epoch time */
                      createdAt: number;
                      data:
                        | {
                            content: string;
                            /** @enum {string} */
                            type: "think";
                          }
                        | {
                            goal?: string;
                            pageTokens: number;
                            query: string;
                            results: {
                              url: string;
                            }[];
                            /** @enum {string} */
                            searchType: "neural" | "keyword" | "auto" | "fast";
                            /** @enum {string} */
                            type: "search";
                          }
                        | {
                            goal?: string;
                            pageTokens: number;
                            result: {
                              url: string;
                            };
                            /** @enum {string} */
                            type: "crawl";
                          };
                      /** @enum {string} */
                      eventType: "task-operation";
                      operationId: string;
                      planId: string;
                      researchId: string;
                      taskId: string;
                    }
                  | {
                      /** @description Milliseconds since epoch time */
                      createdAt: number;
                      /** @enum {string} */
                      eventType: "task-output";
                      output: {
                        content: string;
                        /** @enum {string} */
                        outputType: "completed";
                      };
                      planId: string;
                      researchId: string;
                      taskId: string;
                    }
                )
            )[];
            /** @description The instructions given to this research request */
            instructions: string;
            /**
             * @description The model used for the research request
             * @default exa-research
             * @enum {string}
             */
            model: "exa-research" | "exa-research-pro";
            /** @description The unique identifier for the research request */
            researchId: string;
            /** @enum {string} */
            status: "running";
          }
        | {
            costDollars: {
              numPages: number;
              numSearches: number;
              reasoningTokens: number;
              total: number;
            };
            /** @description Milliseconds since epoch time */
            createdAt: number;
            events?: (
              | (
                  | {
                      /** @description Milliseconds since epoch time */
                      createdAt: number;
                      /** @enum {string} */
                      eventType: "research-definition";
                      instructions: string;
                      outputSchema?: {
                        [key: string]: unknown;
                      };
                      researchId: string;
                    }
                  | {
                      /** @description Milliseconds since epoch time */
                      createdAt: number;
                      /** @enum {string} */
                      eventType: "research-output";
                      output:
                        | {
                            content: string;
                            costDollars: {
                              numPages: number;
                              numSearches: number;
                              reasoningTokens: number;
                              total: number;
                            };
                            /** @enum {string} */
                            outputType: "completed";
                            parsed?: {
                              [key: string]: unknown;
                            };
                          }
                        | {
                            error: string;
                            /** @enum {string} */
                            outputType: "failed";
                          };
                      researchId: string;
                    }
                )
              | (
                  | {
                      /** @description Milliseconds since epoch time */
                      createdAt: number;
                      /** @enum {string} */
                      eventType: "plan-definition";
                      planId: string;
                      researchId: string;
                    }
                  | {
                      /** @description Milliseconds since epoch time */
                      createdAt: number;
                      data:
                        | {
                            content: string;
                            /** @enum {string} */
                            type: "think";
                          }
                        | {
                            goal?: string;
                            pageTokens: number;
                            query: string;
                            results: {
                              url: string;
                            }[];
                            /** @enum {string} */
                            searchType: "neural" | "keyword" | "auto" | "fast";
                            /** @enum {string} */
                            type: "search";
                          }
                        | {
                            goal?: string;
                            pageTokens: number;
                            result: {
                              url: string;
                            };
                            /** @enum {string} */
                            type: "crawl";
                          };
                      /** @enum {string} */
                      eventType: "plan-operation";
                      operationId: string;
                      planId: string;
                      researchId: string;
                    }
                  | {
                      /** @description Milliseconds since epoch time */
                      createdAt: number;
                      /** @enum {string} */
                      eventType: "plan-output";
                      output:
                        | {
                            /** @enum {string} */
                            outputType: "tasks";
                            reasoning: string;
                            tasksInstructions: string[];
                          }
                        | {
                            /** @enum {string} */
                            outputType: "stop";
                            reasoning: string;
                          };
                      planId: string;
                      researchId: string;
                    }
                )
              | (
                  | {
                      /** @description Milliseconds since epoch time */
                      createdAt: number;
                      /** @enum {string} */
                      eventType: "task-definition";
                      instructions: string;
                      planId: string;
                      researchId: string;
                      taskId: string;
                    }
                  | {
                      /** @description Milliseconds since epoch time */
                      createdAt: number;
                      data:
                        | {
                            content: string;
                            /** @enum {string} */
                            type: "think";
                          }
                        | {
                            goal?: string;
                            pageTokens: number;
                            query: string;
                            results: {
                              url: string;
                            }[];
                            /** @enum {string} */
                            searchType: "neural" | "keyword" | "auto" | "fast";
                            /** @enum {string} */
                            type: "search";
                          }
                        | {
                            goal?: string;
                            pageTokens: number;
                            result: {
                              url: string;
                            };
                            /** @enum {string} */
                            type: "crawl";
                          };
                      /** @enum {string} */
                      eventType: "task-operation";
                      operationId: string;
                      planId: string;
                      researchId: string;
                      taskId: string;
                    }
                  | {
                      /** @description Milliseconds since epoch time */
                      createdAt: number;
                      /** @enum {string} */
                      eventType: "task-output";
                      output: {
                        content: string;
                        /** @enum {string} */
                        outputType: "completed";
                      };
                      planId: string;
                      researchId: string;
                      taskId: string;
                    }
                )
            )[];
            /** @description The instructions given to this research request */
            instructions: string;
            /**
             * @description The model used for the research request
             * @default exa-research
             * @enum {string}
             */
            model: "exa-research" | "exa-research-pro";
            output: {
              content: string;
              parsed?: {
                [key: string]: unknown;
              };
            };
            /** @description The unique identifier for the research request */
            researchId: string;
            /** @enum {string} */
            status: "completed";
          }
        | {
            /** @description Milliseconds since epoch time */
            createdAt: number;
            events?: (
              | (
                  | {
                      /** @description Milliseconds since epoch time */
                      createdAt: number;
                      /** @enum {string} */
                      eventType: "research-definition";
                      instructions: string;
                      outputSchema?: {
                        [key: string]: unknown;
                      };
                      researchId: string;
                    }
                  | {
                      /** @description Milliseconds since epoch time */
                      createdAt: number;
                      /** @enum {string} */
                      eventType: "research-output";
                      output:
                        | {
                            content: string;
                            costDollars: {
                              numPages: number;
                              numSearches: number;
                              reasoningTokens: number;
                              total: number;
                            };
                            /** @enum {string} */
                            outputType: "completed";
                            parsed?: {
                              [key: string]: unknown;
                            };
                          }
                        | {
                            error: string;
                            /** @enum {string} */
                            outputType: "failed";
                          };
                      researchId: string;
                    }
                )
              | (
                  | {
                      /** @description Milliseconds since epoch time */
                      createdAt: number;
                      /** @enum {string} */
                      eventType: "plan-definition";
                      planId: string;
                      researchId: string;
                    }
                  | {
                      /** @description Milliseconds since epoch time */
                      createdAt: number;
                      data:
                        | {
                            content: string;
                            /** @enum {string} */
                            type: "think";
                          }
                        | {
                            goal?: string;
                            pageTokens: number;
                            query: string;
                            results: {
                              url: string;
                            }[];
                            /** @enum {string} */
                            searchType: "neural" | "keyword" | "auto" | "fast";
                            /** @enum {string} */
                            type: "search";
                          }
                        | {
                            goal?: string;
                            pageTokens: number;
                            result: {
                              url: string;
                            };
                            /** @enum {string} */
                            type: "crawl";
                          };
                      /** @enum {string} */
                      eventType: "plan-operation";
                      operationId: string;
                      planId: string;
                      researchId: string;
                    }
                  | {
                      /** @description Milliseconds since epoch time */
                      createdAt: number;
                      /** @enum {string} */
                      eventType: "plan-output";
                      output:
                        | {
                            /** @enum {string} */
                            outputType: "tasks";
                            reasoning: string;
                            tasksInstructions: string[];
                          }
                        | {
                            /** @enum {string} */
                            outputType: "stop";
                            reasoning: string;
                          };
                      planId: string;
                      researchId: string;
                    }
                )
              | (
                  | {
                      /** @description Milliseconds since epoch time */
                      createdAt: number;
                      /** @enum {string} */
                      eventType: "task-definition";
                      instructions: string;
                      planId: string;
                      researchId: string;
                      taskId: string;
                    }
                  | {
                      /** @description Milliseconds since epoch time */
                      createdAt: number;
                      data:
                        | {
                            content: string;
                            /** @enum {string} */
                            type: "think";
                          }
                        | {
                            goal?: string;
                            pageTokens: number;
                            query: string;
                            results: {
                              url: string;
                            }[];
                            /** @enum {string} */
                            searchType: "neural" | "keyword" | "auto" | "fast";
                            /** @enum {string} */
                            type: "search";
                          }
                        | {
                            goal?: string;
                            pageTokens: number;
                            result: {
                              url: string;
                            };
                            /** @enum {string} */
                            type: "crawl";
                          };
                      /** @enum {string} */
                      eventType: "task-operation";
                      operationId: string;
                      planId: string;
                      researchId: string;
                      taskId: string;
                    }
                  | {
                      /** @description Milliseconds since epoch time */
                      createdAt: number;
                      /** @enum {string} */
                      eventType: "task-output";
                      output: {
                        content: string;
                        /** @enum {string} */
                        outputType: "completed";
                      };
                      planId: string;
                      researchId: string;
                      taskId: string;
                    }
                )
            )[];
            /** @description The instructions given to this research request */
            instructions: string;
            /**
             * @description The model used for the research request
             * @default exa-research
             * @enum {string}
             */
            model: "exa-research" | "exa-research-pro";
            /** @description The unique identifier for the research request */
            researchId: string;
            /** @enum {string} */
            status: "canceled";
          }
        | {
            /** @description Milliseconds since epoch time */
            createdAt: number;
            /** @description A message indicating why the request failed */
            error: string;
            events?: (
              | (
                  | {
                      /** @description Milliseconds since epoch time */
                      createdAt: number;
                      /** @enum {string} */
                      eventType: "research-definition";
                      instructions: string;
                      outputSchema?: {
                        [key: string]: unknown;
                      };
                      researchId: string;
                    }
                  | {
                      /** @description Milliseconds since epoch time */
                      createdAt: number;
                      /** @enum {string} */
                      eventType: "research-output";
                      output:
                        | {
                            content: string;
                            costDollars: {
                              numPages: number;
                              numSearches: number;
                              reasoningTokens: number;
                              total: number;
                            };
                            /** @enum {string} */
                            outputType: "completed";
                            parsed?: {
                              [key: string]: unknown;
                            };
                          }
                        | {
                            error: string;
                            /** @enum {string} */
                            outputType: "failed";
                          };
                      researchId: string;
                    }
                )
              | (
                  | {
                      /** @description Milliseconds since epoch time */
                      createdAt: number;
                      /** @enum {string} */
                      eventType: "plan-definition";
                      planId: string;
                      researchId: string;
                    }
                  | {
                      /** @description Milliseconds since epoch time */
                      createdAt: number;
                      data:
                        | {
                            content: string;
                            /** @enum {string} */
                            type: "think";
                          }
                        | {
                            goal?: string;
                            pageTokens: number;
                            query: string;
                            results: {
                              url: string;
                            }[];
                            /** @enum {string} */
                            searchType: "neural" | "keyword" | "auto" | "fast";
                            /** @enum {string} */
                            type: "search";
                          }
                        | {
                            goal?: string;
                            pageTokens: number;
                            result: {
                              url: string;
                            };
                            /** @enum {string} */
                            type: "crawl";
                          };
                      /** @enum {string} */
                      eventType: "plan-operation";
                      operationId: string;
                      planId: string;
                      researchId: string;
                    }
                  | {
                      /** @description Milliseconds since epoch time */
                      createdAt: number;
                      /** @enum {string} */
                      eventType: "plan-output";
                      output:
                        | {
                            /** @enum {string} */
                            outputType: "tasks";
                            reasoning: string;
                            tasksInstructions: string[];
                          }
                        | {
                            /** @enum {string} */
                            outputType: "stop";
                            reasoning: string;
                          };
                      planId: string;
                      researchId: string;
                    }
                )
              | (
                  | {
                      /** @description Milliseconds since epoch time */
                      createdAt: number;
                      /** @enum {string} */
                      eventType: "task-definition";
                      instructions: string;
                      planId: string;
                      researchId: string;
                      taskId: string;
                    }
                  | {
                      /** @description Milliseconds since epoch time */
                      createdAt: number;
                      data:
                        | {
                            content: string;
                            /** @enum {string} */
                            type: "think";
                          }
                        | {
                            goal?: string;
                            pageTokens: number;
                            query: string;
                            results: {
                              url: string;
                            }[];
                            /** @enum {string} */
                            searchType: "neural" | "keyword" | "auto" | "fast";
                            /** @enum {string} */
                            type: "search";
                          }
                        | {
                            goal?: string;
                            pageTokens: number;
                            result: {
                              url: string;
                            };
                            /** @enum {string} */
                            type: "crawl";
                          };
                      /** @enum {string} */
                      eventType: "task-operation";
                      operationId: string;
                      planId: string;
                      researchId: string;
                      taskId: string;
                    }
                  | {
                      /** @description Milliseconds since epoch time */
                      createdAt: number;
                      /** @enum {string} */
                      eventType: "task-output";
                      output: {
                        content: string;
                        /** @enum {string} */
                        outputType: "completed";
                      };
                      planId: string;
                      researchId: string;
                      taskId: string;
                    }
                )
            )[];
            /** @description The instructions given to this research request */
            instructions: string;
            /**
             * @description The model used for the research request
             * @default exa-research
             * @enum {string}
             */
            model: "exa-research" | "exa-research-pro";
            /** @description The unique identifier for the research request */
            researchId: string;
            /** @enum {string} */
            status: "failed";
          }
      )[];
      /** @description Whether there are more results to paginate through */
      hasMore: boolean;
      /** @description The cursor to paginate through the next set of results */
      nextCursor: string | null;
    };
    ResearchCreateRequestDtoClass: {
      /** @description Instructions for what research should be conducted */
      instructions: string;
      /**
       * @default exa-research
       * @enum {string}
       */
      model: "exa-research" | "exa-research-pro";
      outputSchema?: {
        [key: string]: unknown;
      };
    };
    ResearchDtoClass:
      | {
          /** @description Milliseconds since epoch time */
          createdAt: number;
          /** @description The instructions given to this research request */
          instructions: string;
          /**
           * @description The model used for the research request
           * @default exa-research
           * @enum {string}
           */
          model: "exa-research" | "exa-research-pro";
          /** @description The unique identifier for the research request */
          researchId: string;
          /** @enum {string} */
          status: "pending";
        }
      | {
          /** @description Milliseconds since epoch time */
          createdAt: number;
          events?: (
            | (
                | {
                    /** @description Milliseconds since epoch time */
                    createdAt: number;
                    /** @enum {string} */
                    eventType: "research-definition";
                    instructions: string;
                    outputSchema?: {
                      [key: string]: unknown;
                    };
                    researchId: string;
                  }
                | {
                    /** @description Milliseconds since epoch time */
                    createdAt: number;
                    /** @enum {string} */
                    eventType: "research-output";
                    output:
                      | {
                          content: string;
                          costDollars: {
                            numPages: number;
                            numSearches: number;
                            reasoningTokens: number;
                            total: number;
                          };
                          /** @enum {string} */
                          outputType: "completed";
                          parsed?: {
                            [key: string]: unknown;
                          };
                        }
                      | {
                          error: string;
                          /** @enum {string} */
                          outputType: "failed";
                        };
                    researchId: string;
                  }
              )
            | (
                | {
                    /** @description Milliseconds since epoch time */
                    createdAt: number;
                    /** @enum {string} */
                    eventType: "plan-definition";
                    planId: string;
                    researchId: string;
                  }
                | {
                    /** @description Milliseconds since epoch time */
                    createdAt: number;
                    data:
                      | {
                          content: string;
                          /** @enum {string} */
                          type: "think";
                        }
                      | {
                          goal?: string;
                          pageTokens: number;
                          query: string;
                          results: {
                            url: string;
                          }[];
                          /** @enum {string} */
                          searchType: "neural" | "keyword" | "auto" | "fast";
                          /** @enum {string} */
                          type: "search";
                        }
                      | {
                          goal?: string;
                          pageTokens: number;
                          result: {
                            url: string;
                          };
                          /** @enum {string} */
                          type: "crawl";
                        };
                    /** @enum {string} */
                    eventType: "plan-operation";
                    operationId: string;
                    planId: string;
                    researchId: string;
                  }
                | {
                    /** @description Milliseconds since epoch time */
                    createdAt: number;
                    /** @enum {string} */
                    eventType: "plan-output";
                    output:
                      | {
                          /** @enum {string} */
                          outputType: "tasks";
                          reasoning: string;
                          tasksInstructions: string[];
                        }
                      | {
                          /** @enum {string} */
                          outputType: "stop";
                          reasoning: string;
                        };
                    planId: string;
                    researchId: string;
                  }
              )
            | (
                | {
                    /** @description Milliseconds since epoch time */
                    createdAt: number;
                    /** @enum {string} */
                    eventType: "task-definition";
                    instructions: string;
                    planId: string;
                    researchId: string;
                    taskId: string;
                  }
                | {
                    /** @description Milliseconds since epoch time */
                    createdAt: number;
                    data:
                      | {
                          content: string;
                          /** @enum {string} */
                          type: "think";
                        }
                      | {
                          goal?: string;
                          pageTokens: number;
                          query: string;
                          results: {
                            url: string;
                          }[];
                          /** @enum {string} */
                          searchType: "neural" | "keyword" | "auto" | "fast";
                          /** @enum {string} */
                          type: "search";
                        }
                      | {
                          goal?: string;
                          pageTokens: number;
                          result: {
                            url: string;
                          };
                          /** @enum {string} */
                          type: "crawl";
                        };
                    /** @enum {string} */
                    eventType: "task-operation";
                    operationId: string;
                    planId: string;
                    researchId: string;
                    taskId: string;
                  }
                | {
                    /** @description Milliseconds since epoch time */
                    createdAt: number;
                    /** @enum {string} */
                    eventType: "task-output";
                    output: {
                      content: string;
                      /** @enum {string} */
                      outputType: "completed";
                    };
                    planId: string;
                    researchId: string;
                    taskId: string;
                  }
              )
          )[];
          /** @description The instructions given to this research request */
          instructions: string;
          /**
           * @description The model used for the research request
           * @default exa-research
           * @enum {string}
           */
          model: "exa-research" | "exa-research-pro";
          /** @description The unique identifier for the research request */
          researchId: string;
          /** @enum {string} */
          status: "running";
        }
      | {
          costDollars: {
            numPages: number;
            numSearches: number;
            reasoningTokens: number;
            total: number;
          };
          /** @description Milliseconds since epoch time */
          createdAt: number;
          events?: (
            | (
                | {
                    /** @description Milliseconds since epoch time */
                    createdAt: number;
                    /** @enum {string} */
                    eventType: "research-definition";
                    instructions: string;
                    outputSchema?: {
                      [key: string]: unknown;
                    };
                    researchId: string;
                  }
                | {
                    /** @description Milliseconds since epoch time */
                    createdAt: number;
                    /** @enum {string} */
                    eventType: "research-output";
                    output:
                      | {
                          content: string;
                          costDollars: {
                            numPages: number;
                            numSearches: number;
                            reasoningTokens: number;
                            total: number;
                          };
                          /** @enum {string} */
                          outputType: "completed";
                          parsed?: {
                            [key: string]: unknown;
                          };
                        }
                      | {
                          error: string;
                          /** @enum {string} */
                          outputType: "failed";
                        };
                    researchId: string;
                  }
              )
            | (
                | {
                    /** @description Milliseconds since epoch time */
                    createdAt: number;
                    /** @enum {string} */
                    eventType: "plan-definition";
                    planId: string;
                    researchId: string;
                  }
                | {
                    /** @description Milliseconds since epoch time */
                    createdAt: number;
                    data:
                      | {
                          content: string;
                          /** @enum {string} */
                          type: "think";
                        }
                      | {
                          goal?: string;
                          pageTokens: number;
                          query: string;
                          results: {
                            url: string;
                          }[];
                          /** @enum {string} */
                          searchType: "neural" | "keyword" | "auto" | "fast";
                          /** @enum {string} */
                          type: "search";
                        }
                      | {
                          goal?: string;
                          pageTokens: number;
                          result: {
                            url: string;
                          };
                          /** @enum {string} */
                          type: "crawl";
                        };
                    /** @enum {string} */
                    eventType: "plan-operation";
                    operationId: string;
                    planId: string;
                    researchId: string;
                  }
                | {
                    /** @description Milliseconds since epoch time */
                    createdAt: number;
                    /** @enum {string} */
                    eventType: "plan-output";
                    output:
                      | {
                          /** @enum {string} */
                          outputType: "tasks";
                          reasoning: string;
                          tasksInstructions: string[];
                        }
                      | {
                          /** @enum {string} */
                          outputType: "stop";
                          reasoning: string;
                        };
                    planId: string;
                    researchId: string;
                  }
              )
            | (
                | {
                    /** @description Milliseconds since epoch time */
                    createdAt: number;
                    /** @enum {string} */
                    eventType: "task-definition";
                    instructions: string;
                    planId: string;
                    researchId: string;
                    taskId: string;
                  }
                | {
                    /** @description Milliseconds since epoch time */
                    createdAt: number;
                    data:
                      | {
                          content: string;
                          /** @enum {string} */
                          type: "think";
                        }
                      | {
                          goal?: string;
                          pageTokens: number;
                          query: string;
                          results: {
                            url: string;
                          }[];
                          /** @enum {string} */
                          searchType: "neural" | "keyword" | "auto" | "fast";
                          /** @enum {string} */
                          type: "search";
                        }
                      | {
                          goal?: string;
                          pageTokens: number;
                          result: {
                            url: string;
                          };
                          /** @enum {string} */
                          type: "crawl";
                        };
                    /** @enum {string} */
                    eventType: "task-operation";
                    operationId: string;
                    planId: string;
                    researchId: string;
                    taskId: string;
                  }
                | {
                    /** @description Milliseconds since epoch time */
                    createdAt: number;
                    /** @enum {string} */
                    eventType: "task-output";
                    output: {
                      content: string;
                      /** @enum {string} */
                      outputType: "completed";
                    };
                    planId: string;
                    researchId: string;
                    taskId: string;
                  }
              )
          )[];
          /** @description The instructions given to this research request */
          instructions: string;
          /**
           * @description The model used for the research request
           * @default exa-research
           * @enum {string}
           */
          model: "exa-research" | "exa-research-pro";
          output: {
            content: string;
            parsed?: {
              [key: string]: unknown;
            };
          };
          /** @description The unique identifier for the research request */
          researchId: string;
          /** @enum {string} */
          status: "completed";
        }
      | {
          /** @description Milliseconds since epoch time */
          createdAt: number;
          events?: (
            | (
                | {
                    /** @description Milliseconds since epoch time */
                    createdAt: number;
                    /** @enum {string} */
                    eventType: "research-definition";
                    instructions: string;
                    outputSchema?: {
                      [key: string]: unknown;
                    };
                    researchId: string;
                  }
                | {
                    /** @description Milliseconds since epoch time */
                    createdAt: number;
                    /** @enum {string} */
                    eventType: "research-output";
                    output:
                      | {
                          content: string;
                          costDollars: {
                            numPages: number;
                            numSearches: number;
                            reasoningTokens: number;
                            total: number;
                          };
                          /** @enum {string} */
                          outputType: "completed";
                          parsed?: {
                            [key: string]: unknown;
                          };
                        }
                      | {
                          error: string;
                          /** @enum {string} */
                          outputType: "failed";
                        };
                    researchId: string;
                  }
              )
            | (
                | {
                    /** @description Milliseconds since epoch time */
                    createdAt: number;
                    /** @enum {string} */
                    eventType: "plan-definition";
                    planId: string;
                    researchId: string;
                  }
                | {
                    /** @description Milliseconds since epoch time */
                    createdAt: number;
                    data:
                      | {
                          content: string;
                          /** @enum {string} */
                          type: "think";
                        }
                      | {
                          goal?: string;
                          pageTokens: number;
                          query: string;
                          results: {
                            url: string;
                          }[];
                          /** @enum {string} */
                          searchType: "neural" | "keyword" | "auto" | "fast";
                          /** @enum {string} */
                          type: "search";
                        }
                      | {
                          goal?: string;
                          pageTokens: number;
                          result: {
                            url: string;
                          };
                          /** @enum {string} */
                          type: "crawl";
                        };
                    /** @enum {string} */
                    eventType: "plan-operation";
                    operationId: string;
                    planId: string;
                    researchId: string;
                  }
                | {
                    /** @description Milliseconds since epoch time */
                    createdAt: number;
                    /** @enum {string} */
                    eventType: "plan-output";
                    output:
                      | {
                          /** @enum {string} */
                          outputType: "tasks";
                          reasoning: string;
                          tasksInstructions: string[];
                        }
                      | {
                          /** @enum {string} */
                          outputType: "stop";
                          reasoning: string;
                        };
                    planId: string;
                    researchId: string;
                  }
              )
            | (
                | {
                    /** @description Milliseconds since epoch time */
                    createdAt: number;
                    /** @enum {string} */
                    eventType: "task-definition";
                    instructions: string;
                    planId: string;
                    researchId: string;
                    taskId: string;
                  }
                | {
                    /** @description Milliseconds since epoch time */
                    createdAt: number;
                    data:
                      | {
                          content: string;
                          /** @enum {string} */
                          type: "think";
                        }
                      | {
                          goal?: string;
                          pageTokens: number;
                          query: string;
                          results: {
                            url: string;
                          }[];
                          /** @enum {string} */
                          searchType: "neural" | "keyword" | "auto" | "fast";
                          /** @enum {string} */
                          type: "search";
                        }
                      | {
                          goal?: string;
                          pageTokens: number;
                          result: {
                            url: string;
                          };
                          /** @enum {string} */
                          type: "crawl";
                        };
                    /** @enum {string} */
                    eventType: "task-operation";
                    operationId: string;
                    planId: string;
                    researchId: string;
                    taskId: string;
                  }
                | {
                    /** @description Milliseconds since epoch time */
                    createdAt: number;
                    /** @enum {string} */
                    eventType: "task-output";
                    output: {
                      content: string;
                      /** @enum {string} */
                      outputType: "completed";
                    };
                    planId: string;
                    researchId: string;
                    taskId: string;
                  }
              )
          )[];
          /** @description The instructions given to this research request */
          instructions: string;
          /**
           * @description The model used for the research request
           * @default exa-research
           * @enum {string}
           */
          model: "exa-research" | "exa-research-pro";
          /** @description The unique identifier for the research request */
          researchId: string;
          /** @enum {string} */
          status: "canceled";
        }
      | {
          /** @description Milliseconds since epoch time */
          createdAt: number;
          /** @description A message indicating why the request failed */
          error: string;
          events?: (
            | (
                | {
                    /** @description Milliseconds since epoch time */
                    createdAt: number;
                    /** @enum {string} */
                    eventType: "research-definition";
                    instructions: string;
                    outputSchema?: {
                      [key: string]: unknown;
                    };
                    researchId: string;
                  }
                | {
                    /** @description Milliseconds since epoch time */
                    createdAt: number;
                    /** @enum {string} */
                    eventType: "research-output";
                    output:
                      | {
                          content: string;
                          costDollars: {
                            numPages: number;
                            numSearches: number;
                            reasoningTokens: number;
                            total: number;
                          };
                          /** @enum {string} */
                          outputType: "completed";
                          parsed?: {
                            [key: string]: unknown;
                          };
                        }
                      | {
                          error: string;
                          /** @enum {string} */
                          outputType: "failed";
                        };
                    researchId: string;
                  }
              )
            | (
                | {
                    /** @description Milliseconds since epoch time */
                    createdAt: number;
                    /** @enum {string} */
                    eventType: "plan-definition";
                    planId: string;
                    researchId: string;
                  }
                | {
                    /** @description Milliseconds since epoch time */
                    createdAt: number;
                    data:
                      | {
                          content: string;
                          /** @enum {string} */
                          type: "think";
                        }
                      | {
                          goal?: string;
                          pageTokens: number;
                          query: string;
                          results: {
                            url: string;
                          }[];
                          /** @enum {string} */
                          searchType: "neural" | "keyword" | "auto" | "fast";
                          /** @enum {string} */
                          type: "search";
                        }
                      | {
                          goal?: string;
                          pageTokens: number;
                          result: {
                            url: string;
                          };
                          /** @enum {string} */
                          type: "crawl";
                        };
                    /** @enum {string} */
                    eventType: "plan-operation";
                    operationId: string;
                    planId: string;
                    researchId: string;
                  }
                | {
                    /** @description Milliseconds since epoch time */
                    createdAt: number;
                    /** @enum {string} */
                    eventType: "plan-output";
                    output:
                      | {
                          /** @enum {string} */
                          outputType: "tasks";
                          reasoning: string;
                          tasksInstructions: string[];
                        }
                      | {
                          /** @enum {string} */
                          outputType: "stop";
                          reasoning: string;
                        };
                    planId: string;
                    researchId: string;
                  }
              )
            | (
                | {
                    /** @description Milliseconds since epoch time */
                    createdAt: number;
                    /** @enum {string} */
                    eventType: "task-definition";
                    instructions: string;
                    planId: string;
                    researchId: string;
                    taskId: string;
                  }
                | {
                    /** @description Milliseconds since epoch time */
                    createdAt: number;
                    data:
                      | {
                          content: string;
                          /** @enum {string} */
                          type: "think";
                        }
                      | {
                          goal?: string;
                          pageTokens: number;
                          query: string;
                          results: {
                            url: string;
                          }[];
                          /** @enum {string} */
                          searchType: "neural" | "keyword" | "auto" | "fast";
                          /** @enum {string} */
                          type: "search";
                        }
                      | {
                          goal?: string;
                          pageTokens: number;
                          result: {
                            url: string;
                          };
                          /** @enum {string} */
                          type: "crawl";
                        };
                    /** @enum {string} */
                    eventType: "task-operation";
                    operationId: string;
                    planId: string;
                    researchId: string;
                    taskId: string;
                  }
                | {
                    /** @description Milliseconds since epoch time */
                    createdAt: number;
                    /** @enum {string} */
                    eventType: "task-output";
                    output: {
                      content: string;
                      /** @enum {string} */
                      outputType: "completed";
                    };
                    planId: string;
                    researchId: string;
                    taskId: string;
                  }
              )
          )[];
          /** @description The instructions given to this research request */
          instructions: string;
          /**
           * @description The model used for the research request
           * @default exa-research
           * @enum {string}
           */
          model: "exa-research" | "exa-research-pro";
          /** @description The unique identifier for the research request */
          researchId: string;
          /** @enum {string} */
          status: "failed";
        };
    ResearchEventDtoClass:
      | (
          | {
              /** @description Milliseconds since epoch time */
              createdAt: number;
              /** @enum {string} */
              eventType: "research-definition";
              instructions: string;
              outputSchema?: {
                [key: string]: unknown;
              };
              researchId: string;
            }
          | {
              /** @description Milliseconds since epoch time */
              createdAt: number;
              /** @enum {string} */
              eventType: "research-output";
              output:
                | {
                    content: string;
                    costDollars: {
                      numPages: number;
                      numSearches: number;
                      reasoningTokens: number;
                      total: number;
                    };
                    /** @enum {string} */
                    outputType: "completed";
                    parsed?: {
                      [key: string]: unknown;
                    };
                  }
                | {
                    error: string;
                    /** @enum {string} */
                    outputType: "failed";
                  };
              researchId: string;
            }
        )
      | (
          | {
              /** @description Milliseconds since epoch time */
              createdAt: number;
              /** @enum {string} */
              eventType: "plan-definition";
              planId: string;
              researchId: string;
            }
          | {
              /** @description Milliseconds since epoch time */
              createdAt: number;
              data:
                | {
                    content: string;
                    /** @enum {string} */
                    type: "think";
                  }
                | {
                    goal?: string;
                    pageTokens: number;
                    query: string;
                    results: {
                      url: string;
                    }[];
                    /** @enum {string} */
                    searchType: "neural" | "keyword" | "auto" | "fast";
                    /** @enum {string} */
                    type: "search";
                  }
                | {
                    goal?: string;
                    pageTokens: number;
                    result: {
                      url: string;
                    };
                    /** @enum {string} */
                    type: "crawl";
                  };
              /** @enum {string} */
              eventType: "plan-operation";
              operationId: string;
              planId: string;
              researchId: string;
            }
          | {
              /** @description Milliseconds since epoch time */
              createdAt: number;
              /** @enum {string} */
              eventType: "plan-output";
              output:
                | {
                    /** @enum {string} */
                    outputType: "tasks";
                    reasoning: string;
                    tasksInstructions: string[];
                  }
                | {
                    /** @enum {string} */
                    outputType: "stop";
                    reasoning: string;
                  };
              planId: string;
              researchId: string;
            }
        )
      | (
          | {
              /** @description Milliseconds since epoch time */
              createdAt: number;
              /** @enum {string} */
              eventType: "task-definition";
              instructions: string;
              planId: string;
              researchId: string;
              taskId: string;
            }
          | {
              /** @description Milliseconds since epoch time */
              createdAt: number;
              data:
                | {
                    content: string;
                    /** @enum {string} */
                    type: "think";
                  }
                | {
                    goal?: string;
                    pageTokens: number;
                    query: string;
                    results: {
                      url: string;
                    }[];
                    /** @enum {string} */
                    searchType: "neural" | "keyword" | "auto" | "fast";
                    /** @enum {string} */
                    type: "search";
                  }
                | {
                    goal?: string;
                    pageTokens: number;
                    result: {
                      url: string;
                    };
                    /** @enum {string} */
                    type: "crawl";
                  };
              /** @enum {string} */
              eventType: "task-operation";
              operationId: string;
              planId: string;
              researchId: string;
              taskId: string;
            }
          | {
              /** @description Milliseconds since epoch time */
              createdAt: number;
              /** @enum {string} */
              eventType: "task-output";
              output: {
                content: string;
                /** @enum {string} */
                outputType: "completed";
              };
              planId: string;
              researchId: string;
              taskId: string;
            }
        );
    ResearchOperationDtoClass:
      | {
          content: string;
          /** @enum {string} */
          type: "think";
        }
      | {
          goal?: string;
          pageTokens: number;
          query: string;
          results: {
            url: string;
          }[];
          /** @enum {string} */
          searchType: "neural" | "keyword" | "auto" | "fast";
          /** @enum {string} */
          type: "search";
        }
      | {
          goal?: string;
          pageTokens: number;
          result: {
            url: string;
          };
          /** @enum {string} */
          type: "crawl";
        };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type SchemaListResearchResponseDto =
  components["schemas"]["ListResearchResponseDto"];
export type SchemaResearchCreateRequestDtoClass =
  components["schemas"]["ResearchCreateRequestDtoClass"];
export type SchemaResearchDtoClass = components["schemas"]["ResearchDtoClass"];
export type SchemaResearchEventDtoClass =
  components["schemas"]["ResearchEventDtoClass"];
export type SchemaResearchOperationDtoClass =
  components["schemas"]["ResearchOperationDtoClass"];
export type $defs = Record<string, never>;
export interface operations {
  ResearchController_listResearch: {
    parameters: {
      query?: {
        /** @description The cursor to paginate through the results */
        cursor?: string;
        /** @description The number of results to return */
        limit?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description List of research requests */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ListResearchResponseDto"];
        };
      };
    };
  };
  ResearchController_createResearch: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ResearchCreateRequestDtoClass"];
      };
    };
    responses: {
      /** @description Research request created */
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ResearchDtoClass"];
        };
      };
    };
  };
  ResearchController_getResearch: {
    parameters: {
      query: {
        events: string;
        stream: string;
      };
      header?: never;
      path: {
        researchId: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ResearchDtoClass"];
        };
      };
    };
  };
}
