/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/research/v0/tasks": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** List research tasks */
    get: operations["research-tasks-list"];
    put?: never;
    /** Create a research task with instructions and an output schema */
    post: operations["research-tasks-create"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/research/v0/tasks/{id}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Get a research task by id */
    get: operations["ResearchControllerV0_getResearchTask[0]"];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    ListResearchTasksRequestDto: {
      /** @description The cursor to paginate through the results */
      cursor?: string;
      /**
       * @description The number of results to return
       * @default 25
       */
      limit: number;
    };
    ListResearchTasksResponseDto: {
      /** @description The list of research tasks */
      data: components["schemas"]["ResearchTaskDto"][];
      /** @description Whether there are more results to paginate through */
      hasMore: boolean;
      /** @description The cursor to paginate through the next set of results */
      nextCursor: string | null;
    };
    ResearchCreateTaskRequestDto: {
      input?: {
        instructions: string;
      };
      /** @description Instructions for what the research task should accomplish */
      instructions?: string;
      /**
       * @default exa-research
       * @enum {string}
       */
      model: ResearchCreateTaskRequestDtoModel;
      output?: {
        /**
         * @description When true and an output schema is omitted, an output schema will be intelligently generated. Otherwise, if this is false and there is no output schema, a generic markdown report will be generated.
         * @default true
         */
        inferSchema: boolean;
        /** @description A JsonSchema specification of the desired output. See https://json-schema.org/draft-07. */
        schema?: unknown;
      };
    };
    ResearchCreateTaskResponseDto: {
      /** @description The unique identifier for the research task */
      id: string;
      outputSchema: {
        [key: string]: unknown;
      };
    };
    ResearchTaskDto: {
      /** @description Citations grouped by the root field they were used in */
      citations?: {
        [key: string]: {
          id: string;
          snippet: string;
          title?: string;
          url: string;
        }[];
      };
      /** @description The research results data conforming to the specified schema */
      data?: {
        [key: string]: unknown;
      };
      /** @description The unique identifier for the research task */
      id: string;
      /** @description The instructions or query for the research task */
      instructions: string;
      /** @description The JSON schema specification for the expected output format */
      schema?: {
        [key: string]: unknown;
      };
      /**
       * @description The current status of the research task
       * @enum {string}
       */
      status: ResearchTaskDtoStatus;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type SchemaListResearchTasksRequestDto =
  components["schemas"]["ListResearchTasksRequestDto"];
export type SchemaListResearchTasksResponseDto =
  components["schemas"]["ListResearchTasksResponseDto"];
export type SchemaResearchCreateTaskRequestDto =
  components["schemas"]["ResearchCreateTaskRequestDto"];
export type SchemaResearchCreateTaskResponseDto =
  components["schemas"]["ResearchCreateTaskResponseDto"];
export type SchemaResearchTaskDto = components["schemas"]["ResearchTaskDto"];
export type $defs = Record<string, never>;
export interface operations {
  "research-tasks-list": {
    parameters: {
      query?: {
        /** @description The cursor to paginate through the results */
        cursor?: string;
        /** @description The number of results to return */
        limit?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description List of research tasks */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ListResearchTasksResponseDto"];
        };
      };
    };
  };
  "research-tasks-create": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ResearchCreateTaskRequestDto"];
      };
    };
    responses: {
      /** @description Research task created */
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ResearchCreateTaskResponseDto"];
        };
      };
    };
  };
  "ResearchControllerV0_getResearchTask[1]": {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ResearchTaskDto"];
        };
      };
    };
  };
  "ResearchControllerV0_getResearchTask[0]": {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ResearchTaskDto"];
        };
      };
    };
  };
}
export enum ResearchCreateTaskRequestDtoModel {
  exa_research = "exa-research",
  exa_research_pro = "exa-research-pro",
}
export enum ResearchTaskDtoStatus {
  running = "running",
  completed = "completed",
  failed = "failed",
}
